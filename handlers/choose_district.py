from aiogram import Router, F
from aiogram.types import CallbackQuery, InputMediaPhoto, FSInputFile, InputFile
from aiogram.fsm.context import FSMContext
from aiogram.utils.media_group import MediaGroupBuilder

from funcs.check_subscription import is_subscribed

from keyboards.choose_district_kb import get_district_kb, get_place_kb, get_subscription_kb

from funcs.db import check_existing_user, add_new_user, get_establishments, get_photo_paths_for_establishment

form_router = Router()


@form_router.callback_query(F.data.in_({"choose_district", "check_subscription"}))
async def choose_district(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    existing_user = check_existing_user(user_id)

    if existing_user:
        if await is_subscribed(user_id):
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª, –ø–æ–∑–≤–æ–ª—è–µ–º –µ–º—É –≤—ã–±–∏—Ä–∞—Ç—å —Ä–∞–π–æ–Ω
            await callback_query.message.edit_text("–ù–∞ —Å–≤—è–∑–∏ –±–æ—Ç shame. –í—ã–±–∏—Ä–∞–π —Ä–∞–π–æ–Ω, –∏ —è —Å–æ–∑–¥–∞–º –ø–æ–¥–±–æ—Ä–∫—É –ª—É—á—à–∏—Ö "
                                                   "—Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤, –∫–∞—Ñ–µ, –±–∞—Ä–æ–≤ –∏ –∫–ª—É–±–æ–≤ –≤ —ç—Ç–æ–º –º–µ—Å—Ç–µ."
                                                   "\n–ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –µ—Å—Ç—å –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ –±–æ—Ç—É, –Ω–∞–ø–∏—à–∏—Ç–µ "
                                                   "–ù–∞—Å—Ç–µ @onesddluv. –ê –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Å–≤–æ—ë –∑–∞–≤–µ–¥–µ–Ω–∏–µ –≤ –±–æ—Ç–µ "
                                                   "–∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥—Ä—É–≥–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ ‚Äî —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ø–Ω–æ–π "
                                                   "@kosmaticyana.",
                                                   reply_markup=get_district_kb())

        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª, —Å–æ–æ–±—â–∞–µ–º –µ–º—É –æ–± —ç—Ç–æ–º
            await callback_query.message.edit_text("–î–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–π–æ–Ω–∞ –≤—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª!",
                                                   reply_markup=get_subscription_kb())

    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –æ–Ω –∫–∞–∫-—Ç–æ —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É
        add_new_user(user_id)
        await callback_query.message.answer(
            "–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç SHAME. –ü–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É—é –í–∞–º –ª—É—á—à–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã, –∫–∞—Ñ–µ, –±–∞—Ä—ã –∏ –∫–ª—É–±—ã –≤ "
            "—Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–≥–µ –ú–æ—Å–∫–≤—ã."
            "\n–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å!")


@form_router.callback_query(F.data.in_({"–ê—Ä–±–∞—Ç", "–ë–∞—Å–º–∞–Ω–Ω—ã–π", "–ó–∞–º–æ—Å–∫–≤–æ—Ä–µ—á—å–µ", " –ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∏–π", "–ú–µ—â–∞–Ω—Å–∫–∏–π",
                                        "–ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∏–π", "–¢–∞–≥–∞–Ω—Å–∫–∏–π", "–¢–≤–µ—Ä—Å–∫–æ–π", "–•–∞–º–æ–≤–Ω–∏–∫–∏", "–Ø–∫–∏–º–∞–Ω–∫–∞",}))
async def process_chosen_district(callback_query: CallbackQuery, state: FSMContext):
    district = callback_query.data

    await state.update_data(district=district)

    await callback_query.message.edit_text(f'–¢—ã –≤—ã–±—Ä–∞–ª {district}',
                                           reply_markup=get_place_kb())


@form_router.callback_query(F.data.in_({"–†–µ—Å—Ç–æ—Ä–∞–Ω", "–ë–∞—Ä"}))
async def process_chosen_place(callback_query: CallbackQuery, state: FSMContext):
    chat_id = callback_query.from_user.id
    establishment_type = callback_query.data

    data = await state.get_data()

    district = data.get("district")

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–≤–µ–¥–µ–Ω–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    establishments = await get_establishments(district, establishment_type)

    if establishments:

        num_per_message = 3
        num_messages = len(establishments) // num_per_message + (len(establishments) % num_per_message > 0)

        for i in range(num_messages):
            start_index = i * num_per_message
            end_index = min((i + 1) * num_per_message, len(establishments))

            for establishment in establishments[start_index:end_index]:
                establishment_id = establishment[0]
                establishment_name = establishment[1]
                establishment_address = establishment[4]
                establishment_metro = establishment[5]
                establishment_description = establishment[6]
                establishment_feature = establishment[7]
                establishment_photo_paths = get_photo_paths_for_establishment(establishment_id)

                establishment_text = f"{establishment_name}\n" \
                                     f"üìç {establishment_address}\n" \
                                     f"‚ìÇÔ∏è {establishment_metro}\n\n" \
                                     f"{establishment_description}\n\n" \
                                     f"{establishment_feature}"

                # –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—É
                media_group = MediaGroupBuilder(caption=establishment_text)

                for photo_path in establishment_photo_paths:
                    media_group.add(type="photo", media=FSInputFile(photo_path))

                await callback_query.bot.send_media_group(chat_id=chat_id, media=media_group.build())

    else:
        await callback_query.message.edit_text(
            f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ —Ä–∞–π–æ–Ω–µ {district} –Ω–µ—Ç –∑–∞–≤–µ–¥–µ–Ω–∏–π —Ç–∏–ø–∞ {establishment_type}.')